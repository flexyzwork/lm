name: Build & push

on:
  workflow_call:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1 # ✅ 최소한의 커밋만 가져오기

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to OCI Container Registry (OCIR)
        run: |
          echo "${{ secrets.OCI_AUTH_TOKEN }}" | docker login -u "${{ secrets.OCI_USERNAME }}" --password-stdin kix.ocir.io

      - name: Build & Push Multi-Arch Images
        run: |
          IMAGE_PREFIX="kix.ocir.io/axunckhvyv1v/lm"

          declare -A SERVICES=(
          ["redis"]="redis:6.2-alpine"
          ["backend"]="apps/api"
          ["auth"]="apps/auth"
          ["frontend"]="apps/client"
          )

          for SERVICE in "${!SERVICES[@]}"; do
          CONTEXT_PATH="${SERVICES[$SERVICE]}"
          DOCKERFILE_PATH="$CONTEXT_PATH/Dockerfile"

          if [[ $SERVICE == "redis" ]]; then
              docker pull $CONTEXT_PATH || true
              docker tag $CONTEXT_PATH $IMAGE_PREFIX-$SERVICE:latest
              docker push $IMAGE_PREFIX-$SERVICE:latest
          else
              if [[ $SERVICE == "auth" ]]; then
              CONTEXT_PATH="."
              fi
              docker buildx build \
              --cache-from=type=gha \
              --cache-to=type=gha,mode=max \
              --platform linux/arm64/v8 \
              --build-arg NEXT_PUBLIC_API_BASE_URL=${{ secrets.NEXT_PUBLIC_API_BASE_URL }} \
              --build-arg NEXT_PUBLIC_STRIPE_PUBLIC_KEY=${{ secrets.NEXT_PUBLIC_STRIPE_PUBLIC_KEY }} \
              --build-arg NEXT_PUBLIC_URL=${{ secrets.NEXT_PUBLIC_URL }} \
              --push \
              -t $IMAGE_PREFIX-$SERVICE:latest \
              -f $DOCKERFILE_PATH $CONTEXT_PATH
          fi
          done
