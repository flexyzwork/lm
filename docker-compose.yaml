services:
  redis:
    image: kix.ocir.io/axunckhvyv1v/lm-redis:latest
    # image: redis:6.2-alpine
    ports:
      - '6379:6379'
    # env_file:
    #   - ./.envs/.env
    networks:
      - app-network

  backend:
    # build:
    #   context: ./apps/api
    #   dockerfile: Dockerfile
    image: kix.ocir.io/axunckhvyv1v/lm-backend:latest
    restart: always
    ports:
      - '8001:8001'
    env_file:
      - ./.envs/.env
    volumes:
      # - ./global-bundle.pem:/etc/ssl/certs/global-bundle.pem
      - backend_data:/app/data
      - /app/node_modules
    networks:
      - app-network

  auth:
    # build:
    #   context: .
    #   dockerfile: ./apps/auth/Dockerfile
    image: kix.ocir.io/axunckhvyv1v/lm-auth:latest
    restart: always
    ports:
      - '4000:4000'
    env_file:
      - ./.envs/.env
    volumes:
      # - ./global-bundle.pem:/etc/ssl/certs/global-bundle.pem
      - auth_data:/app/data
      - /app/node_modules
    networks:
      - app-network

  frontend:
    build:
    #   context: ./apps/client
    #   dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL}
        NEXT_PUBLIC_LOCAL_URL: ${NEXT_PUBLIC_LOCAL_URL}
        NEXT_PUBLIC_STRIPE_PUBLIC_KEY: ${NEXT_PUBLIC_STRIPE_PUBLIC_KEY}
    image: kix.ocir.io/axunckhvyv1v/lm-frontend:latest
    restart: always
    ports:
      - '3000:3000'
    env_file:
      - ./.envs/.env
    volumes:
      - frontend_data:/app/data
      - /app/node_modules
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  auth_data:
  backend_data:
  frontend_data:
