x-shared: &common-service
  image: node:20-alpine
  working_dir: /app
  volumes:
    - .:/app
    - /app/node_modules
  networks:
    - app-network

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 2s
      timeout: 2s
      retries: 20
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:6.2-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - app-network

  backend:
    <<: *common-service
    ports:
      - '8001:8001'
    command:
      [
        '/bin/sh',
        '-c',
        'npm install -g pnpm && pnpm install --filter=@apps/api --no-frozen-lockfile && pnpm run dev --filter=@apps/api',
      ]
    depends_on:
      - postgres

  auth:
    <<: *common-service
    ports:
      - '4000:4000'
    command:
      ['/bin/sh', '-c', 'npm install -g pnpm && pnpm install --no-frozen-lockfile && pnpm run dev --filter=@apps/auth']
    depends_on:
      - postgres
      - redis

  frontend:
    <<: *common-service
    ports:
      - '3000:3000'
    command:
      [
        '/bin/sh',
        '-c',
        'npm install -g pnpm && pnpm install --filter=@apps/client --no-frozen-lockfile && pnpm run dev --filter=@apps/client',
      ]
    environment:
      NEXT_PUBLIC_API_BASE_URL: '/api'
      NEXT_PUBLIC_URL: 'http://localhost:3000'
      NEXT_PUBLIC_STRIPE_PUBLIC_KEY: ${NEXT_PUBLIC_STRIPE_PUBLIC_KEY}
    depends_on:
      - backend
      - auth

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
